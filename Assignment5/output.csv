Question Number,Result,Spark Explain
1,9704,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[count(distinct _c11#28)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#117]
      +- HashAggregate(keys=[], functions=[partial_count(distinct _c11#28)])
         +- HashAggregate(keys=[_c11#28], functions=[])
            +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#113]
               +- HashAggregate(keys=[_c11#28], functions=[])
                  +- FileScan csv [_c11#28] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c11:string>

"
2,11.490524386574391,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[avg(count#77L)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#226]
      +- HashAggregate(keys=[], functions=[partial_avg(count#77L)])
         +- HashAggregate(keys=[_c0#17], functions=[count(1)])
            +- Exchange hashpartitioning(_c0#17, 200), ENSURE_REQUIREMENTS, [id=#222]
               +- HashAggregate(keys=[_c0#17], functions=[partial_count(1)])
                  +- FileScan csv [_c0#17] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c0:string>

"
3,GO:0005524,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#104L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#104L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#322]
      +- HashAggregate(keys=[col#100], functions=[count(1)])
         +- Exchange hashpartitioning(col#100, 200), ENSURE_REQUIREMENTS, [id=#319]
            +- HashAggregate(keys=[col#100], functions=[partial_count(1)])
               +- Generate explode(GO#98), false, [col#100]
                  +- Project [split(_c13#30, \|, -1) AS GO#98]
                     +- Filter (((isnotnull(_c13#30) AND NOT (_c13#30 = -)) AND (size(split(_c13#30, \|, -1), true) > 0)) AND isnotnull(split(_c13#30, \|, -1)))
                        +- FileScan csv [_c13#30] Batched: false, DataFilters: [isnotnull(_c13#30), NOT (_c13#30 = -), (size(split(_c13#30, \|, -1), true) > 0), isnotnull(split..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c13), Not(EqualTo(_c13,-))], ReadSchema: struct<_c13:string>

"
4,131.73178916966685,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[avg(Diff#110)])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [id=#376]
      +- HashAggregate(keys=[], functions=[partial_avg(Diff#110)])
         +- Project [(_c7#24 - _c6#23) AS Diff#110]
            +- FileScan csv [_c6#23,_c7#24] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c6:int,_c7:int>

"
5,"['IPR027417', 'IPR002347', 'IPR003439', 'IPR036388', 'IPR036259', 'IPR003593', 'IPR036390', 'IPR036291', 'IPR000515', 'IPR001789']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#142L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#142L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#460]
      +- HashAggregate(keys=[_c11#28], functions=[count(1)])
         +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#457]
            +- HashAggregate(keys=[_c11#28], functions=[partial_count(1)])
               +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))
                  +- FileScan csv [_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>

"
6,"['IPR006308', 'IPR006308', 'IPR006308', 'IPR006308', 'IPR006308', 'IPR012103', 'IPR006308', 'IPR006308', 'IPR006308', 'IPR006308']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [Pro#148 DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(Pro#148 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#489]
      +- Project [_c11#28, (cast((_c7#24 - _c6#23) as double) / cast(_c2#19 as double)) AS Pro#148]
         +- Filter (((((isnotnull(_c11#28) AND isnotnull(_c7#24)) AND isnotnull(_c6#23)) AND isnotnull(_c2#19)) AND NOT (_c11#28 = -)) AND ((cast((_c7#24 - _c6#23) as double) / cast(_c2#19 as double)) >= 0.9))
            +- FileScan csv [_c2#19,_c6#23,_c7#24,_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), isnotnull(_c7#24), isnotnull(_c6#23), isnotnull(_c2#19), NOT (_c11#28 = -), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:int,_c6:int,_c7:int,_c11:string>

"
7,"['domain', 'like', 'superfamily', 'protein', 'binding', 'terminal', 'type', 'C', 'DNA', 'hydrolase']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#161L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#161L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#598]
      +- HashAggregate(keys=[col#157], functions=[count(1)])
         +- Exchange hashpartitioning(col#157, 200), ENSURE_REQUIREMENTS, [id=#595]
            +- HashAggregate(keys=[col#157], functions=[partial_count(1)])
               +- Filter NOT (col#157 = )
                  +- Generate explode(W#155), false, [col#157]
                     +- Project [split(_c12#29, \/| |-|,, -1) AS W#155]
                        +- Filter (((isnotnull(_c12#29) AND NOT (_c12#29 = -)) AND (size(split(_c12#29, \/| |-|,, -1), true) > 0)) AND isnotnull(split(_c12#29, \/| |-|,, -1)))
                           +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -), (size(split(_c12#29, \/| |-|,, -1), true) > 0), isnotnull..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>

"
8,"['xylonate', 'AtHST', 'EhuD', 'P3', 'AroM', 'SufR', 'VapC20', 'DUF3531', 'CHP03960', 'M15A']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#173L ASC NULLS FIRST], true, 0
   +- Exchange rangepartitioning(count#173L ASC NULLS FIRST, 200), ENSURE_REQUIREMENTS, [id=#707]
      +- HashAggregate(keys=[col#169], functions=[count(1)])
         +- Exchange hashpartitioning(col#169, 200), ENSURE_REQUIREMENTS, [id=#704]
            +- HashAggregate(keys=[col#169], functions=[partial_count(1)])
               +- Filter NOT (col#169 = )
                  +- Generate explode(W#167), false, [col#169]
                     +- Project [split(_c12#29, \/| |-|,, -1) AS W#167]
                        +- Filter (((isnotnull(_c12#29) AND NOT (_c12#29 = -)) AND (size(split(_c12#29, \/| |-|,, -1), true) > 0)) AND isnotnull(split(_c12#29, \/| |-|,, -1)))
                           +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -), (size(split(_c12#29, \/| |-|,, -1), true) > 0), isnotnull..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>

"
9,"['III', 'polymerase', 'DNA', 'Gram', 'positive', 'type', 'alpha', 'subunit', 'Peptidase', 'S8A']","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#189L DESC NULLS LAST], true, 0
   +- HashAggregate(keys=[col#185], functions=[count(1)])
      +- HashAggregate(keys=[col#185], functions=[partial_count(1)])
         +- Filter NOT (col#185 = )
            +- Generate explode(W#183), false, [col#185]
               +- Project [split(_c12#29, \/| |-|,, -1) AS W#183]
                  +- Filter ((isnotnull(_c12#29) AND NOT (_c12#29 = -)) AND ((size(split(_c12#29, \/| |-|,, -1), true) > 0) AND isnotnull(split(_c12#29, \/| |-|,, -1))))
                     +- TakeOrderedAndProject(limit=10, orderBy=[Pro#179 DESC NULLS LAST], output=[_c12#29])
                        +- Project [_c12#29, (cast((_c7#24 - _c6#23) as double) / cast(_c2#19 as double)) AS Pro#179]
                           +- Filter (((((isnotnull(_c11#28) AND isnotnull(_c7#24)) AND isnotnull(_c6#23)) AND isnotnull(_c2#19)) AND NOT (_c11#28 = -)) AND ((cast((_c7#24 - _c6#23) as double) / cast(_c2#19 as double)) >= 0.9))
                              +- FileScan csv [_c2#19,_c6#23,_c7#24,_c11#28,_c12#29] Batched: false, DataFilters: [isnotnull(_c11#28), isnotnull(_c7#24), isnotnull(_c6#23), isnotnull(_c2#19), NOT (_c11#28 = -), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:int,_c6:int,_c7:int,_c11:string,_c12:string>

"
10,0.31961294035697524,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[_c0#17, _c2#19], functions=[count(_c11#28)])
   +- Exchange hashpartitioning(_c0#17, _c2#19, 200), ENSURE_REQUIREMENTS, [id=#864]
      +- HashAggregate(keys=[_c0#17, _c2#19], functions=[partial_count(_c11#28)])
         +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))
            +- FileScan csv [_c0#17,_c2#19,_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/dataprocessing/interproscan/all_bacilli.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c0:string,_c2:int,_c11:string>

"
